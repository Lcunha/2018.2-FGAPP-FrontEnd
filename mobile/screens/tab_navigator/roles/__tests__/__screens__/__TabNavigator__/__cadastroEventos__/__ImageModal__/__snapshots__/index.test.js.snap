// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  hideModalContentWhileAnimating={false}
  onModalHide={[Function]}
  onRequestClose={[Function]}
  scrollOffset={0}
  scrollOffsetMax={0}
  scrollTo={null}
  supportedOrientations={
    Array [
      "portrait",
      "landscape",
    ]
  }
  swipeThreshold={100}
  transparent={true}
  visible={false}
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    collapsable={undefined}
    hitSlop={undefined}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "black",
        "bottom": 0,
        "height": 1334,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 750,
      }
    }
    testID={undefined}
  />
  <View
    collapsable={undefined}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    pointerEvents="box-none"
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    style={
      Object {
        "flex": 1,
        "justifyContent": "center",
        "margin": 37.5,
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
      }
    }
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
  >
    <View
      style={
        Object {
          "backgroundColor": "#fff",
          "borderBottomWidth": 0.5,
          "borderColor": "#ccc",
          "borderLeftWidth": 0.5,
          "borderRadius": 2,
          "borderRightWidth": 0.5,
          "borderTopWidth": 0.5,
          "elevation": 3,
          "flexWrap": "nowrap",
          "marginBottom": 5,
          "marginLeft": 2,
          "marginRight": 2,
          "marginTop": 5,
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 2,
            "width": 0,
          },
          "shadowOpacity": 0.1,
          "shadowRadius": 1.5,
        }
      }
      styles={
        Object {
          "alignItems": "center",
          "alignSelf": "center",
          "borderRadius": 10,
          "width": "100%",
        }
      }
      virtual={undefined}
    >
      <View>
        <Image
          source={
            Object {
              "uri": undefined,
            }
          }
          style={
            Object {
              "height": 300,
              "width": "100%",
            }
          }
        />
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "stretch",
              "backgroundColor": "transparent",
              "borderBottomWidth": 1,
              "borderColor": "#000",
              "borderLeftWidth": 1,
              "borderRadius": 5,
              "borderRightWidth": 1,
              "borderTopWidth": 1,
              "borderWidth": 1,
              "elevation": null,
              "flexDirection": "row",
              "height": 45,
              "justifyContent": "center",
              "opacity": 1,
              "paddingBottom": 6,
              "paddingTop": 6,
              "shadowColor": null,
              "shadowOffset": null,
              "shadowOpacity": null,
              "shadowRadius": null,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          />
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          >
            Enviar outra imagem
          </Text>
        </View>
      </View>
    </View>
  </View>
</Modal>
`;
