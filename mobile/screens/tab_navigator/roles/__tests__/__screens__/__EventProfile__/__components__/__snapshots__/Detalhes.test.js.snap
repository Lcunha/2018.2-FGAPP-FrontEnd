// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onRequestClose={[Function]}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hitSlop={undefined}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
      testID={undefined}
    />
    <View
      collapsable={undefined}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      pointerEvents="box-none"
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
          "margin": 37.5,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#fff",
              "borderBottomWidth": 0.5,
              "borderColor": "#ccc",
              "borderLeftWidth": 0.5,
              "borderRadius": 2,
              "borderRightWidth": 0.5,
              "borderTopWidth": 0.5,
              "elevation": 3,
              "flexWrap": "nowrap",
              "marginBottom": 5,
              "marginLeft": 2,
              "marginRight": 2,
              "marginTop": 5,
              "shadowColor": "#000",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.1,
              "shadowRadius": 1.5,
            },
            Object {
              "alignSelf": "center",
              "borderRadius": 10,
              "width": "90%",
            },
          ]
        }
        virtual={undefined}
      >
        <View
          bordered={true}
          header={true}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#fff",
                "borderBottomWidth": 0.5,
                "borderColor": "#ccc",
                "borderRadius": 2,
                "flexDirection": "row",
                "paddingBottom": 15,
                "paddingLeft": 15,
                "paddingRight": 15,
                "paddingTop": 15,
              },
              Object {
                "alignSelf": "center",
                "height": 50,
              },
            ]
          }
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          />
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "black",
              }
            }
          >
            Descrição do Rolê
          </Text>
        </View>
        <RCTScrollView
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "height": "60%",
            }
          }
        >
          <View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "textAlign": "center",
                }
              }
            >
              
undefined

            </Text>
          </View>
        </RCTScrollView>
      </View>
    </View>
  </Modal>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onRequestClose={[Function]}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hitSlop={undefined}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
      testID={undefined}
    />
    <View
      collapsable={undefined}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      pointerEvents="box-none"
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
          "margin": 37.5,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#fff",
              "borderBottomWidth": 0.5,
              "borderColor": "#ccc",
              "borderLeftWidth": 0.5,
              "borderRadius": 2,
              "borderRightWidth": 0.5,
              "borderTopWidth": 0.5,
              "elevation": 3,
              "flexWrap": "nowrap",
              "marginBottom": 5,
              "marginLeft": 2,
              "marginRight": 2,
              "marginTop": 5,
              "shadowColor": "#000",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.1,
              "shadowRadius": 1.5,
            },
            Object {
              "alignSelf": "center",
              "borderRadius": 10,
              "width": "90%",
            },
          ]
        }
        virtual={undefined}
      >
        <View
          bordered={true}
          header={true}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#fff",
                "borderBottomWidth": 0.5,
                "borderColor": "#ccc",
                "borderRadius": 2,
                "flexDirection": "row",
                "paddingBottom": 15,
                "paddingLeft": 15,
                "paddingRight": 15,
                "paddingTop": 15,
              },
              Object {
                "alignSelf": "center",
                "height": 50,
              },
            ]
          }
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          />
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#B79200",
              }
            }
          >
            Drinks
          </Text>
        </View>
        <RCTScrollView
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "height": "60%",
            }
          }
        >
          <View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "textAlign": "center",
                }
              }
            >
              
undefined

            </Text>
          </View>
        </RCTScrollView>
      </View>
    </View>
  </Modal>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onRequestClose={[Function]}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hitSlop={undefined}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
      testID={undefined}
    />
    <View
      collapsable={undefined}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      pointerEvents="box-none"
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
          "margin": 37.5,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#fff",
              "borderBottomWidth": 0.5,
              "borderColor": "#ccc",
              "borderLeftWidth": 0.5,
              "borderRadius": 2,
              "borderRightWidth": 0.5,
              "borderTopWidth": 0.5,
              "elevation": 3,
              "flexWrap": "nowrap",
              "marginBottom": 5,
              "marginLeft": 2,
              "marginRight": 2,
              "marginTop": 5,
              "shadowColor": "#000",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.1,
              "shadowRadius": 1.5,
            },
            Object {
              "alignSelf": "center",
              "borderRadius": 10,
              "width": "90%",
            },
          ]
        }
        virtual={undefined}
      >
        <View
          bordered={true}
          header={true}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#fff",
                "borderBottomWidth": 0.5,
                "borderColor": "#ccc",
                "borderRadius": 2,
                "flexDirection": "row",
                "paddingBottom": 15,
                "paddingLeft": 15,
                "paddingRight": 15,
                "paddingTop": 15,
              },
              Object {
                "alignSelf": "center",
                "height": 50,
              },
            ]
          }
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          />
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "red",
              }
            }
          >
            Comidas
          </Text>
        </View>
        <RCTScrollView
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "height": "60%",
            }
          }
        >
          <View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "textAlign": "center",
                }
              }
            >
              
undefined

            </Text>
          </View>
        </RCTScrollView>
      </View>
    </View>
  </Modal>
  <View
    style={
      Object {
        "backgroundColor": "#fff",
        "borderBottomWidth": 0.5,
        "borderColor": "#ccc",
        "borderLeftWidth": 0.5,
        "borderRadius": 2,
        "borderRightWidth": 0.5,
        "borderTopWidth": 0.5,
        "elevation": 3,
        "flexWrap": "nowrap",
        "marginBottom": 5,
        "marginLeft": 2,
        "marginRight": 2,
        "marginTop": 5,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1.5,
      }
    }
    virtual={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "grey",
          "marginBottom": 10,
        }
      }
    >
      Detalhes
    </Text>
    <View>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
      >
         Erro! 
      </Text>
    </View>
    <View>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
      >
         Erro! 
      </Text>
    </View>
    <View>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
      >
         Erro! 
      </Text>
    </View>
  </View>
</View>
`;
