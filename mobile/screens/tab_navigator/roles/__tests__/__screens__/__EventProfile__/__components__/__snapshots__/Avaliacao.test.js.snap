// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "borderBottomWidth": 0.5,
      "borderColor": "#ccc",
      "borderLeftWidth": 0.5,
      "borderRadius": 2,
      "borderRightWidth": 0.5,
      "borderTopWidth": 0.5,
      "elevation": 3,
      "flexWrap": "nowrap",
      "marginBottom": 5,
      "marginLeft": 2,
      "marginRight": 2,
      "marginTop": 5,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 2,
        "width": 0,
      },
      "shadowOpacity": 0.1,
      "shadowRadius": 1.5,
    }
  }
  virtual={undefined}
>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Object {
        "color": "grey",
        "marginBottom": 10,
      }
    }
  >
    Avaliação
  </Text>
  <View
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "center",
        "flex": 1,
      }
    }
    virtual={undefined}
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderBottomWidth": 0,
            "borderColor": "#ccc",
            "borderLeftWidth": 0,
            "borderRadius": 2,
            "borderRightWidth": 0,
            "borderTopWidth": 0,
            "elevation": null,
            "flexWrap": "nowrap",
            "marginBottom": 5,
            "marginLeft": 2,
            "marginRight": 2,
            "marginTop": 5,
            "shadowColor": null,
            "shadowOffset": null,
            "shadowOpacity": null,
            "shadowRadius": null,
          },
          Object {
            "alignSelf": "center",
            "width": 300,
          },
        ]
      }
      transparent={true}
      virtual={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "alignSelf": "center",
            "fontSize": 15,
          }
        }
      >
        Como está o evento?
      </Text>
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#fff",
              "borderRadius": 2,
              "flexDirection": "row",
              "paddingBottom": 10,
              "paddingLeft": 15,
              "paddingRight": 15,
              "paddingTop": 10,
            },
            Object {
              "alignSelf": "center",
              "marginBottom": -30,
            },
          ]
        }
        virtual={undefined}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "flex": 1,
              "flexDirection": "row",
            }
          }
          virtual={undefined}
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            />
          </View>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "alignSelf": "center",
                "borderRadius": 5,
                "borderWidth": 1,
                "height": 30,
                "justifyContent": "center",
                "margin": 20,
                "padding": 5,
                "textAlign": "center",
                "width": 50,
              }
            }
          >
            11
          </Text>
        </View>
        <View
          style={
            Object {
              "alignItems": "flex-end",
              "alignSelf": "center",
              "flex": 0.8,
            }
          }
          virtual={undefined}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#fff",
                "borderRadius": 2,
                "flexDirection": "row",
                "paddingBottom": 10,
                "paddingLeft": 15,
                "paddingRight": 15,
                "paddingTop": 10,
              }
            }
            virtual={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "alignSelf": "center",
                  "borderRadius": 5,
                  "borderWidth": 1,
                  "height": 30,
                  "justifyContent": "center",
                  "margin": 20,
                  "padding": 5,
                  "textAlign": "center",
                  "width": 50,
                }
              }
            >
              4
            </Text>
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
